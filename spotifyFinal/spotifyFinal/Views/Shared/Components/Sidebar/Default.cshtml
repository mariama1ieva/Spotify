@model SidebarVM
<section id="sidebar-section">
    <div class="content">
        <div class="sidebar-navarea">
            <ul id="menu">
                <li>
                    <i class="fa-solid fa-house"></i>
                    <a asp-action="Index" asp-controller="Home">Home</a>
                </li>
                <li>
                    <i class="fa-solid fa-magnifying-glass"></i>
                    <a asp-action="Index" asp-controller="Search">Search</a>
                </li>
            </ul>
        </div>
    </div>
    <div class="sidebar-mainarea">
        <div class="main">
            @if (!User.Identity.IsAuthenticated)
            {
                <a style="text-decoration:none" asp-action="login" asp-controller="account">
                    <div class="library">

                        <div class="own-library">
                            <i class="fa-solid fa-layer-group"></i>
                            <span>Your Library</span>
                        </div>
                        <div class="right-side">
                            <button><i class="fa-solid fa-plus"></i></button>
                            <button id="arrow"><i class="fa-solid fa-arrow-right"></i></button>
                        </div>
                    </div>
                </a>
            }


            <div class="create-side">
                <div class="content">
                    @if (User.Identity.IsAuthenticated)
                    {
                        <a style="text-decoration:none" asp-controller="LikedSong" asp-action="Index">
                            <div class="sidebar-playlist-cards">
                                <div class="card">
                                    <div class="left-side">
                                        <img src="~/assets/images/liked-songs-300.png" alt="Liked Songs">
                                    </div>
                                    <div class="right-side">
                                        <p class="playlist-name">Liked Songs</p>
                                        <p>Playlist - <span class="song_count">@Model.SongCount</span></p>
                                    </div>
                                </div>
                            </div>
                        </a>


                        @foreach (var item in Model.Playlists)
                        {

                            <div class="sidebar-playlist-cards">
                                <div class="card">
                                    <a style="text-decoration:none" asp-controller="Playlist" asp-action="Detail" asp-route-id="@item.Id">

                                        <div class="left-side">
                                            <img src="~/assets/images/@item.ImgUrl" alt="Playlist Image">
                                        </div>
                                    </a>

                                    <div class="right-side">
                                        <p class="playlist-name">@item.Name</p>
                                        <p>Playlist by <span class="song_count">@item.AppUser.Fullname</span></p>

                                        <i class="fa-solid fa-trash delete-playlist" style="color: grey;cursor:pointer;margin-top:15px;margin-left:40px" data-id="@item.Id"></i>
                                    </div>
                                </div>

                            </div>

                        }


                    }
                    else
                    {
                        <p style="color:white">Please log in to see your playlists.</p>
                    }
                    <div class="create-playlist">
                        <div class="paragraphy">
                            <p>Create your first playlist</p>
                            <p>It's easy, we'll help you</p>
                        </div>
                        <a style="text-decoration:none;color:black" asp-controller="Playlist" asp-action="Index"><span>Create playlist</span></a>

                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<section id="mobile-sidebar">
    <div class="content">
        <div class="nav">
            <div id="homeicon-mobile">
                <i class="fa-solid fa-house"></i>
                <a href="#">Home</a>
            </div>
            <div id="searchicon-mobile">
                <i class="fa-solid fa-magnifying-glass"></i>
                <a href="#">Search</a>
            </div>
        </div>
    </div>
</section>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script>
    $(document).ready(function () {
        $(".delete-playlist").on("click", function (event) {
            event.stopImmediatePropagation();

            const button = $(this);
            const itemId = button.data('id');

            // SweetAlert2 confirmation dialog with Spotify-like colors
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#1ED760', // Spotify green
                cancelButtonColor: '#d33', // Default red color for cancel button
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'Cancel',
                timer: 5000, // Optional: Set a timer to auto-confirm after 5 seconds
                timerProgressBar: true
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: `/Playlist/Delete/${itemId}`,
                        type: 'DELETE',
                        headers: {
                            'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function (result) {
                            // Remove the playlist card from the DOM
                            const playlistCard = button.closest(".sidebar-playlist-cards");
                            if (playlistCard.length) {
                                playlistCard.remove();
                            }
                            Swal.fire(
                                'Deleted!',
                                'Your playlist has been deleted.',
                                'success',
                                {
                                    confirmButtonColor: '#1ED760' // Spotify green for the success button
                                }
                            );
                        },
                        error: function (xhr, status, error) {
                            console.error("Failed to delete playlist:", error);
                            Swal.fire(
                                'Error!',
                                'Failed to delete the playlist.',
                                'error',
                                {
                                    confirmButtonColor: '#1ED760' // Spotify green for the error button
                                }
                            );
                        }
                    });
                }
            });
        });
    });


</script>